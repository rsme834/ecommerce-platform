generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  phone     String?
  createdAt DateTime @default(now())
  isActive  Boolean  @default(true)
  
  // العلاقات
  orders    Order[]
  images    Image[]
  
  @@map("User")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  stock       Int
  createdAt   DateTime @default(now())
  isApproved  Boolean  @default(false)
  
  // العلاقات
  images      Image[]
  
  @@map("Product")
}

model Category {
  id       String    @id @default(cuid())
  name     String
  parentId String?
  
  // العلاقات الذاتية
  parent   Category? @relation("CategoryParent", fields: [parentId], references: [id])
  children Category[] @relation("CategoryParent")
  
  @@map("Category")
}

model Order {
  id          String   @id @default(cuid())
  userId      String
  orderItems  String
  totalAmount Float
  status      String   @default("PENDING")
  orderDate   DateTime @default(now())
  
  // العلاقة مع User
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("Order")
}

model Image {
  id          String   @id @default(cuid())
  url         String
  altText     String?
  fileName    String
  fileSize    Int?
  mimeType    String?
  productId   String?
  userId      String?
  isMain      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // العلاقات
  product     Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("Image")
}